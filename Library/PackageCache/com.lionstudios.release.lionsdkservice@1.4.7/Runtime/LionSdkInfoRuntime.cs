using System;using UnityEngine;#if UNITY_EDITORusing UnityEditor;#endifnamespace LionStudios.Runtime.Sdk{    [Serializable]    public class LionSdkInfoRuntime : ScriptableObject    {        private const string resPath = "Assets/LionStudios/Resources";        private const string assetPath = "SdkRuntimeInfos.asset";                private static LionSdkInfoRuntime _runtimeAsset;        public static LionSdkInfoRuntime RuntimeInfo        {            get            {                if (_runtimeAsset == null)                {                    var asset = Resources.Load<LionSdkInfoRuntime>(assetPath.Replace(".asset", ""));                    if (asset == null)                    {                        Debug.LogWarning("Lion SDK Service: Failed to retrieve runtime SDKs. Resource is missing!");                        return null;                    }                    _runtimeAsset = asset;                }                return _runtimeAsset;            }        }                [SerializeField] public bool defineScriptingSymbols = true;        [SerializeField] public LionSdkCollection Sdks;        #if UNITY_EDITOR        public static void CreateOrUpdate(LionSdkCollection sdkCollection)        {            string path = resPath + "/" + assetPath;            LionSdkInfoRuntime inst = AssetDatabase.LoadAssetAtPath<LionSdkInfoRuntime>(path);                        if (inst == null)            {                // create new instance                inst = ScriptableObject.CreateInstance<LionSdkInfoRuntime>();                if (!System.IO.Directory.Exists(resPath))                {                    System.IO.Directory.CreateDirectory(resPath);                }                AssetDatabase.CreateAsset(inst, path);            }            inst.Sdks = sdkCollection;            AssetDatabase.SaveAssets();                        _runtimeAsset = inst;        }        #endif    }}